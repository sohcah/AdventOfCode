const FAIL = Symbol("fail");
const umpfzyhwhj_outerText = text;let umpfzyhwhj_result,umpfzyhwhj_taken;
umpfzyhwhj_break: {
let text = umpfzyhwhj_outerText;
const jdanzuplbu_outerText = text;let jdanzuplbu_result,jdanzuplbu_taken;
jdanzuplbu_break: {
let text = jdanzuplbu_outerText;
jdanzuplbu_taken=0;
const erdzebyqip_outerText = text;let erdzebyqip_result,erdzebyqip_taken;
erdzebyqip_break: {
let text = erdzebyqip_outerText;
if (!text.startsWith("")) erdzebyqip_result="Unable to match text ("")",erdzebyqip_taken=FAIL;
else erdzebyqip_result="",erdzebyqip_taken=0;
}
text = text.slice(erdzebyqip_taken===FAIL?0:erdzebyqip_taken);
if (erdzebyqip_taken===FAIL) {jdanzuplbu_result="Unable to match sequence - " + erdzebyqip_result,jdanzuplbu_taken=FAIL;break jdanzuplbu_break;}
jdanzuplbu_taken+=erdzebyqip_taken;
const fagopectir_outerText = text;let fagopectir_result,fagopectir_taken;
fagopectir_break: {
let text = fagopectir_outerText;
fagopectir_result=[];fagopectir_taken=0;
const ksuaxjsqui_outerText = text;let ksuaxjsqui_result,ksuaxjsqui_taken;
ksuaxjsqui_break: {
let text = ksuaxjsqui_outerText;
const ilylgbgtkz_outerText = text;let ilylgbgtkz_result,ilylgbgtkz_taken;
ilylgbgtkz_break: {
let text = ilylgbgtkz_outerText;
ilylgbgtkz_taken=0;
const nisdyzuram_outerText = text;let nisdyzuram_result,nisdyzuram_taken;
nisdyzuram_break: {
let text = nisdyzuram_outerText;
if (!text.startsWith("")) nisdyzuram_result="Unable to match text ("")",nisdyzuram_taken=FAIL;
else nisdyzuram_result="",nisdyzuram_taken=0;
}
text = text.slice(nisdyzuram_taken===FAIL?0:nisdyzuram_taken);
if (nisdyzuram_taken===FAIL) {ilylgbgtkz_result="Unable to match sequence - " + nisdyzuram_result,ilylgbgtkz_taken=FAIL;break ilylgbgtkz_break;}
ilylgbgtkz_taken+=nisdyzuram_taken;
const lhqkgbbwms_outerText = text;let lhqkgbbwms_result,lhqkgbbwms_taken;
lhqkgbbwms_break: {
let text = lhqkgbbwms_outerText;
const regex = /[^:]+/;
const match = regex.exec(text);
if (!match) lhqkgbbwms_result="Unable to match regex",lhqkgbbwms_taken=FAIL;
else lhqkgbbwms_result=match[0],lhqkgbbwms_taken=match[0].length;
}
text = text.slice(lhqkgbbwms_taken===FAIL?0:lhqkgbbwms_taken);
if (lhqkgbbwms_taken===FAIL) {ilylgbgtkz_result="Unable to match sequence - " + lhqkgbbwms_result,ilylgbgtkz_taken=FAIL;break ilylgbgtkz_break;}
ilylgbgtkz_taken+=lhqkgbbwms_taken;
const qdxusqjaqf_outerText = text;let qdxusqjaqf_result,qdxusqjaqf_taken;
qdxusqjaqf_break: {
let text = qdxusqjaqf_outerText;
if (!text.startsWith(": ")) qdxusqjaqf_result="Unable to match text (": ")",qdxusqjaqf_taken=FAIL;
else qdxusqjaqf_result=": ",qdxusqjaqf_taken=2;
}
text = text.slice(qdxusqjaqf_taken===FAIL?0:qdxusqjaqf_taken);
if (qdxusqjaqf_taken===FAIL) {ilylgbgtkz_result="Unable to match sequence - " + qdxusqjaqf_result,ilylgbgtkz_taken=FAIL;break ilylgbgtkz_break;}
ilylgbgtkz_taken+=qdxusqjaqf_taken;
const ubjknupmvo_outerText = text;let ubjknupmvo_result,ubjknupmvo_taken;
ubjknupmvo_break: {
let text = ubjknupmvo_outerText;
ubjknupmvo_result=[];ubjknupmvo_taken=0;
const fsexzxokvq_outerText = text;let fsexzxokvq_result,fsexzxokvq_taken;
fsexzxokvq_break: {
let text = fsexzxokvq_outerText;
const pljpggojwk_outerText = text;let pljpggojwk_result,pljpggojwk_taken;
pljpggojwk_break: {
let text = pljpggojwk_outerText;
pljpggojwk_taken=0;
const ukdgnjtpxc_outerText = text;let ukdgnjtpxc_result,ukdgnjtpxc_taken;
ukdgnjtpxc_break: {
let text = ukdgnjtpxc_outerText;
if (!text.startsWith("")) ukdgnjtpxc_result="Unable to match text ("")",ukdgnjtpxc_taken=FAIL;
else ukdgnjtpxc_result="",ukdgnjtpxc_taken=0;
}
text = text.slice(ukdgnjtpxc_taken===FAIL?0:ukdgnjtpxc_taken);
if (ukdgnjtpxc_taken===FAIL) {pljpggojwk_result="Unable to match sequence - " + ukdgnjtpxc_result,pljpggojwk_taken=FAIL;break pljpggojwk_break;}
pljpggojwk_taken+=ukdgnjtpxc_taken;
const oxkqwejofd_outerText = text;let oxkqwejofd_result,oxkqwejofd_taken;
oxkqwejofd_break: {
let text = oxkqwejofd_outerText;
let num = 0;
let index;
for (index = 0; index < text.length; index++) {
  const char = text.charCodeAt(index);
  if (char < 48 || char > 57) break;
  num = num * 10 + char - 48;
}
if (!index) oxkqwejofd_result="Unable to match number",oxkqwejofd_taken=FAIL;
else oxkqwejofd_result=num,oxkqwejofd_taken=index;
}
text = text.slice(oxkqwejofd_taken===FAIL?0:oxkqwejofd_taken);
if (oxkqwejofd_taken===FAIL) {pljpggojwk_result="Unable to match sequence - " + oxkqwejofd_result,pljpggojwk_taken=FAIL;break pljpggojwk_break;}
pljpggojwk_taken+=oxkqwejofd_taken;
const lgcesadktn_outerText = text;let lgcesadktn_result,lgcesadktn_taken;
lgcesadktn_break: {
let text = lgcesadktn_outerText;
if (!text.startsWith("-")) lgcesadktn_result="Unable to match text ("-")",lgcesadktn_taken=FAIL;
else lgcesadktn_result="-",lgcesadktn_taken=1;
}
text = text.slice(lgcesadktn_taken===FAIL?0:lgcesadktn_taken);
if (lgcesadktn_taken===FAIL) {pljpggojwk_result="Unable to match sequence - " + lgcesadktn_result,pljpggojwk_taken=FAIL;break pljpggojwk_break;}
pljpggojwk_taken+=lgcesadktn_taken;
const khpzuvimke_outerText = text;let khpzuvimke_result,khpzuvimke_taken;
khpzuvimke_break: {
let text = khpzuvimke_outerText;
let num = 0;
let index;
for (index = 0; index < text.length; index++) {
  const char = text.charCodeAt(index);
  if (char < 48 || char > 57) break;
  num = num * 10 + char - 48;
}
if (!index) khpzuvimke_result="Unable to match number",khpzuvimke_taken=FAIL;
else khpzuvimke_result=num,khpzuvimke_taken=index;
}
text = text.slice(khpzuvimke_taken===FAIL?0:khpzuvimke_taken);
if (khpzuvimke_taken===FAIL) {pljpggojwk_result="Unable to match sequence - " + khpzuvimke_result,pljpggojwk_taken=FAIL;break pljpggojwk_break;}
pljpggojwk_taken+=khpzuvimke_taken;
const nmjvnkncqx_outerText = text;let nmjvnkncqx_result,nmjvnkncqx_taken;
nmjvnkncqx_break: {
let text = nmjvnkncqx_outerText;
if (!text.startsWith("")) nmjvnkncqx_result="Unable to match text ("")",nmjvnkncqx_taken=FAIL;
else nmjvnkncqx_result="",nmjvnkncqx_taken=0;
}
text = text.slice(nmjvnkncqx_taken===FAIL?0:nmjvnkncqx_taken);
if (nmjvnkncqx_taken===FAIL) {pljpggojwk_result="Unable to match sequence - " + nmjvnkncqx_result,pljpggojwk_taken=FAIL;break pljpggojwk_break;}
pljpggojwk_taken+=nmjvnkncqx_taken;
const grkbdomwzu_outerText = text;let grkbdomwzu_result,grkbdomwzu_taken;
grkbdomwzu_break: {
let text = grkbdomwzu_outerText;
if (!text.startsWith("")) grkbdomwzu_result="Unable to match text ("")",grkbdomwzu_taken=FAIL;
else grkbdomwzu_result="",grkbdomwzu_taken=0;
}
text = text.slice(grkbdomwzu_taken===FAIL?0:grkbdomwzu_taken);
if (grkbdomwzu_taken===FAIL) {pljpggojwk_result="Unable to match sequence - " + grkbdomwzu_result,pljpggojwk_taken=FAIL;break pljpggojwk_break;}
pljpggojwk_taken+=grkbdomwzu_taken;
pljpggojwk_result=[ukdgnjtpxc_result,oxkqwejofd_result,lgcesadktn_result,khpzuvimke_result,nmjvnkncqx_result,grkbdomwzu_result];
}
text = text.slice(pljpggojwk_taken===FAIL?0:pljpggojwk_taken);
if (pljpggojwk_taken===FAIL) {fsexzxokvq_result="Unable to match seq - " + pljpggojwk_result,fsexzxokvq_taken=FAIL;break fsexzxokvq_break;}
fsexzxokvq_result=[
pljpggojwk_result[1],
pljpggojwk_result[3],
];
fsexzxokvq_taken=pljpggojwk_taken;
}
text = text.slice(fsexzxokvq_taken===FAIL?0:fsexzxokvq_taken);
if (fsexzxokvq_taken===FAIL) {ubjknupmvo_result="Unable to match list - " + fsexzxokvq_result,ubjknupmvo_taken=FAIL;break ubjknupmvo_break;}
ubjknupmvo_result.push(fsexzxokvq_result);ubjknupmvo_taken+=fsexzxokvq_taken;
while (true) {
const mzbabeadrp_outerText = text;let mzbabeadrp_result,mzbabeadrp_taken;
mzbabeadrp_break: {
let text = mzbabeadrp_outerText;
if (!text.startsWith(" or ")) mzbabeadrp_result="Unable to match text (" or ")",mzbabeadrp_taken=FAIL;
else mzbabeadrp_result=" or ",mzbabeadrp_taken=4;
}
text = text.slice(mzbabeadrp_taken===FAIL?0:mzbabeadrp_taken);
if (mzbabeadrp_taken===FAIL) break;
ubjknupmvo_taken+=mzbabeadrp_taken;
const lrfgnpjgac_outerText = text;let lrfgnpjgac_result,lrfgnpjgac_taken;
lrfgnpjgac_break: {
let text = lrfgnpjgac_outerText;
const nhkcgdeolk_outerText = text;let nhkcgdeolk_result,nhkcgdeolk_taken;
nhkcgdeolk_break: {
let text = nhkcgdeolk_outerText;
nhkcgdeolk_taken=0;
const mjxawdglvj_outerText = text;let mjxawdglvj_result,mjxawdglvj_taken;
mjxawdglvj_break: {
let text = mjxawdglvj_outerText;
if (!text.startsWith("")) mjxawdglvj_result="Unable to match text ("")",mjxawdglvj_taken=FAIL;
else mjxawdglvj_result="",mjxawdglvj_taken=0;
}
text = text.slice(mjxawdglvj_taken===FAIL?0:mjxawdglvj_taken);
if (mjxawdglvj_taken===FAIL) {nhkcgdeolk_result="Unable to match sequence - " + mjxawdglvj_result,nhkcgdeolk_taken=FAIL;break nhkcgdeolk_break;}
nhkcgdeolk_taken+=mjxawdglvj_taken;
const wpnohnewfm_outerText = text;let wpnohnewfm_result,wpnohnewfm_taken;
wpnohnewfm_break: {
let text = wpnohnewfm_outerText;
let num = 0;
let index;
for (index = 0; index < text.length; index++) {
  const char = text.charCodeAt(index);
  if (char < 48 || char > 57) break;
  num = num * 10 + char - 48;
}
if (!index) wpnohnewfm_result="Unable to match number",wpnohnewfm_taken=FAIL;
else wpnohnewfm_result=num,wpnohnewfm_taken=index;
}
text = text.slice(wpnohnewfm_taken===FAIL?0:wpnohnewfm_taken);
if (wpnohnewfm_taken===FAIL) {nhkcgdeolk_result="Unable to match sequence - " + wpnohnewfm_result,nhkcgdeolk_taken=FAIL;break nhkcgdeolk_break;}
nhkcgdeolk_taken+=wpnohnewfm_taken;
const ocyxdfjofc_outerText = text;let ocyxdfjofc_result,ocyxdfjofc_taken;
ocyxdfjofc_break: {
let text = ocyxdfjofc_outerText;
if (!text.startsWith("-")) ocyxdfjofc_result="Unable to match text ("-")",ocyxdfjofc_taken=FAIL;
else ocyxdfjofc_result="-",ocyxdfjofc_taken=1;
}
text = text.slice(ocyxdfjofc_taken===FAIL?0:ocyxdfjofc_taken);
if (ocyxdfjofc_taken===FAIL) {nhkcgdeolk_result="Unable to match sequence - " + ocyxdfjofc_result,nhkcgdeolk_taken=FAIL;break nhkcgdeolk_break;}
nhkcgdeolk_taken+=ocyxdfjofc_taken;
const zkqeylcnpp_outerText = text;let zkqeylcnpp_result,zkqeylcnpp_taken;
zkqeylcnpp_break: {
let text = zkqeylcnpp_outerText;
let num = 0;
let index;
for (index = 0; index < text.length; index++) {
  const char = text.charCodeAt(index);
  if (char < 48 || char > 57) break;
  num = num * 10 + char - 48;
}
if (!index) zkqeylcnpp_result="Unable to match number",zkqeylcnpp_taken=FAIL;
else zkqeylcnpp_result=num,zkqeylcnpp_taken=index;
}
text = text.slice(zkqeylcnpp_taken===FAIL?0:zkqeylcnpp_taken);
if (zkqeylcnpp_taken===FAIL) {nhkcgdeolk_result="Unable to match sequence - " + zkqeylcnpp_result,nhkcgdeolk_taken=FAIL;break nhkcgdeolk_break;}
nhkcgdeolk_taken+=zkqeylcnpp_taken;
const pnvexwksts_outerText = text;let pnvexwksts_result,pnvexwksts_taken;
pnvexwksts_break: {
let text = pnvexwksts_outerText;
if (!text.startsWith("")) pnvexwksts_result="Unable to match text ("")",pnvexwksts_taken=FAIL;
else pnvexwksts_result="",pnvexwksts_taken=0;
}
text = text.slice(pnvexwksts_taken===FAIL?0:pnvexwksts_taken);
if (pnvexwksts_taken===FAIL) {nhkcgdeolk_result="Unable to match sequence - " + pnvexwksts_result,nhkcgdeolk_taken=FAIL;break nhkcgdeolk_break;}
nhkcgdeolk_taken+=pnvexwksts_taken;
const qhpprdfdni_outerText = text;let qhpprdfdni_result,qhpprdfdni_taken;
qhpprdfdni_break: {
let text = qhpprdfdni_outerText;
if (!text.startsWith("")) qhpprdfdni_result="Unable to match text ("")",qhpprdfdni_taken=FAIL;
else qhpprdfdni_result="",qhpprdfdni_taken=0;
}
text = text.slice(qhpprdfdni_taken===FAIL?0:qhpprdfdni_taken);
if (qhpprdfdni_taken===FAIL) {nhkcgdeolk_result="Unable to match sequence - " + qhpprdfdni_result,nhkcgdeolk_taken=FAIL;break nhkcgdeolk_break;}
nhkcgdeolk_taken+=qhpprdfdni_taken;
nhkcgdeolk_result=[mjxawdglvj_result,wpnohnewfm_result,ocyxdfjofc_result,zkqeylcnpp_result,pnvexwksts_result,qhpprdfdni_result];
}
text = text.slice(nhkcgdeolk_taken===FAIL?0:nhkcgdeolk_taken);
if (nhkcgdeolk_taken===FAIL) {lrfgnpjgac_result="Unable to match seq - " + nhkcgdeolk_result,lrfgnpjgac_taken=FAIL;break lrfgnpjgac_break;}
lrfgnpjgac_result=[
nhkcgdeolk_result[1],
nhkcgdeolk_result[3],
];
lrfgnpjgac_taken=nhkcgdeolk_taken;
}
text = text.slice(lrfgnpjgac_taken===FAIL?0:lrfgnpjgac_taken);
if (lrfgnpjgac_taken===FAIL) {ubjknupmvo_result="Unable to match list - " + lrfgnpjgac_result,ubjknupmvo_taken=FAIL;break ubjknupmvo_break;}
ubjknupmvo_result.push(lrfgnpjgac_result);ubjknupmvo_taken+=lrfgnpjgac_taken;
}
}
text = text.slice(ubjknupmvo_taken===FAIL?0:ubjknupmvo_taken);
if (ubjknupmvo_taken===FAIL) {ilylgbgtkz_result="Unable to match sequence - " + ubjknupmvo_result,ilylgbgtkz_taken=FAIL;break ilylgbgtkz_break;}
ilylgbgtkz_taken+=ubjknupmvo_taken;
const lfbsevbbtr_outerText = text;let lfbsevbbtr_result,lfbsevbbtr_taken;
lfbsevbbtr_break: {
let text = lfbsevbbtr_outerText;
if (!text.startsWith("")) lfbsevbbtr_result="Unable to match text ("")",lfbsevbbtr_taken=FAIL;
else lfbsevbbtr_result="",lfbsevbbtr_taken=0;
}
text = text.slice(lfbsevbbtr_taken===FAIL?0:lfbsevbbtr_taken);
if (lfbsevbbtr_taken===FAIL) {ilylgbgtkz_result="Unable to match sequence - " + lfbsevbbtr_result,ilylgbgtkz_taken=FAIL;break ilylgbgtkz_break;}
ilylgbgtkz_taken+=lfbsevbbtr_taken;
const tucitkuvgg_outerText = text;let tucitkuvgg_result,tucitkuvgg_taken;
tucitkuvgg_break: {
let text = tucitkuvgg_outerText;
if (!text.startsWith("")) tucitkuvgg_result="Unable to match text ("")",tucitkuvgg_taken=FAIL;
else tucitkuvgg_result="",tucitkuvgg_taken=0;
}
text = text.slice(tucitkuvgg_taken===FAIL?0:tucitkuvgg_taken);
if (tucitkuvgg_taken===FAIL) {ilylgbgtkz_result="Unable to match sequence - " + tucitkuvgg_result,ilylgbgtkz_taken=FAIL;break ilylgbgtkz_break;}
ilylgbgtkz_taken+=tucitkuvgg_taken;
ilylgbgtkz_result=[nisdyzuram_result,lhqkgbbwms_result,qdxusqjaqf_result,ubjknupmvo_result,lfbsevbbtr_result,tucitkuvgg_result];
}
text = text.slice(ilylgbgtkz_taken===FAIL?0:ilylgbgtkz_taken);
if (ilylgbgtkz_taken===FAIL) {ksuaxjsqui_result="Unable to match seq - " + ilylgbgtkz_result,ksuaxjsqui_taken=FAIL;break ksuaxjsqui_break;}
ksuaxjsqui_result={
"name": ilylgbgtkz_result[1],
"ranges": ilylgbgtkz_result[3],
};
ksuaxjsqui_taken=ilylgbgtkz_taken;
}
text = text.slice(ksuaxjsqui_taken===FAIL?0:ksuaxjsqui_taken);
if (ksuaxjsqui_taken===FAIL) {fagopectir_result="Unable to match list - " + ksuaxjsqui_result,fagopectir_taken=FAIL;break fagopectir_break;}
fagopectir_result.push(ksuaxjsqui_result);fagopectir_taken+=ksuaxjsqui_taken;
while (true) {
const idlwntiwkj_outerText = text;let idlwntiwkj_result,idlwntiwkj_taken;
idlwntiwkj_break: {
let text = idlwntiwkj_outerText;
if (!text.startsWith("\n")) idlwntiwkj_result="Unable to match text ("\n")",idlwntiwkj_taken=FAIL;
else idlwntiwkj_result="\n",idlwntiwkj_taken=1;
}
text = text.slice(idlwntiwkj_taken===FAIL?0:idlwntiwkj_taken);
if (idlwntiwkj_taken===FAIL) break;
fagopectir_taken+=idlwntiwkj_taken;
const egwgbvfwhd_outerText = text;let egwgbvfwhd_result,egwgbvfwhd_taken;
egwgbvfwhd_break: {
let text = egwgbvfwhd_outerText;
const ggbnxjckjy_outerText = text;let ggbnxjckjy_result,ggbnxjckjy_taken;
ggbnxjckjy_break: {
let text = ggbnxjckjy_outerText;
ggbnxjckjy_taken=0;
const wappvagibe_outerText = text;let wappvagibe_result,wappvagibe_taken;
wappvagibe_break: {
let text = wappvagibe_outerText;
if (!text.startsWith("")) wappvagibe_result="Unable to match text ("")",wappvagibe_taken=FAIL;
else wappvagibe_result="",wappvagibe_taken=0;
}
text = text.slice(wappvagibe_taken===FAIL?0:wappvagibe_taken);
if (wappvagibe_taken===FAIL) {ggbnxjckjy_result="Unable to match sequence - " + wappvagibe_result,ggbnxjckjy_taken=FAIL;break ggbnxjckjy_break;}
ggbnxjckjy_taken+=wappvagibe_taken;
const nmeleagddy_outerText = text;let nmeleagddy_result,nmeleagddy_taken;
nmeleagddy_break: {
let text = nmeleagddy_outerText;
const regex = /[^:]+/;
const match = regex.exec(text);
if (!match) nmeleagddy_result="Unable to match regex",nmeleagddy_taken=FAIL;
else nmeleagddy_result=match[0],nmeleagddy_taken=match[0].length;
}
text = text.slice(nmeleagddy_taken===FAIL?0:nmeleagddy_taken);
if (nmeleagddy_taken===FAIL) {ggbnxjckjy_result="Unable to match sequence - " + nmeleagddy_result,ggbnxjckjy_taken=FAIL;break ggbnxjckjy_break;}
ggbnxjckjy_taken+=nmeleagddy_taken;
const cmoauwuxvz_outerText = text;let cmoauwuxvz_result,cmoauwuxvz_taken;
cmoauwuxvz_break: {
let text = cmoauwuxvz_outerText;
if (!text.startsWith(": ")) cmoauwuxvz_result="Unable to match text (": ")",cmoauwuxvz_taken=FAIL;
else cmoauwuxvz_result=": ",cmoauwuxvz_taken=2;
}
text = text.slice(cmoauwuxvz_taken===FAIL?0:cmoauwuxvz_taken);
if (cmoauwuxvz_taken===FAIL) {ggbnxjckjy_result="Unable to match sequence - " + cmoauwuxvz_result,ggbnxjckjy_taken=FAIL;break ggbnxjckjy_break;}
ggbnxjckjy_taken+=cmoauwuxvz_taken;
const rjwaaniiuh_outerText = text;let rjwaaniiuh_result,rjwaaniiuh_taken;
rjwaaniiuh_break: {
let text = rjwaaniiuh_outerText;
rjwaaniiuh_result=[];rjwaaniiuh_taken=0;
const aaibhnqxyv_outerText = text;let aaibhnqxyv_result,aaibhnqxyv_taken;
aaibhnqxyv_break: {
let text = aaibhnqxyv_outerText;
const xsedkygben_outerText = text;let xsedkygben_result,xsedkygben_taken;
xsedkygben_break: {
let text = xsedkygben_outerText;
xsedkygben_taken=0;
const tswxhlporb_outerText = text;let tswxhlporb_result,tswxhlporb_taken;
tswxhlporb_break: {
let text = tswxhlporb_outerText;
if (!text.startsWith("")) tswxhlporb_result="Unable to match text ("")",tswxhlporb_taken=FAIL;
else tswxhlporb_result="",tswxhlporb_taken=0;
}
text = text.slice(tswxhlporb_taken===FAIL?0:tswxhlporb_taken);
if (tswxhlporb_taken===FAIL) {xsedkygben_result="Unable to match sequence - " + tswxhlporb_result,xsedkygben_taken=FAIL;break xsedkygben_break;}
xsedkygben_taken+=tswxhlporb_taken;
const pppxchwmwp_outerText = text;let pppxchwmwp_result,pppxchwmwp_taken;
pppxchwmwp_break: {
let text = pppxchwmwp_outerText;
let num = 0;
let index;
for (index = 0; index < text.length; index++) {
  const char = text.charCodeAt(index);
  if (char < 48 || char > 57) break;
  num = num * 10 + char - 48;
}
if (!index) pppxchwmwp_result="Unable to match number",pppxchwmwp_taken=FAIL;
else pppxchwmwp_result=num,pppxchwmwp_taken=index;
}
text = text.slice(pppxchwmwp_taken===FAIL?0:pppxchwmwp_taken);
if (pppxchwmwp_taken===FAIL) {xsedkygben_result="Unable to match sequence - " + pppxchwmwp_result,xsedkygben_taken=FAIL;break xsedkygben_break;}
xsedkygben_taken+=pppxchwmwp_taken;
const hgarfvknmm_outerText = text;let hgarfvknmm_result,hgarfvknmm_taken;
hgarfvknmm_break: {
let text = hgarfvknmm_outerText;
if (!text.startsWith("-")) hgarfvknmm_result="Unable to match text ("-")",hgarfvknmm_taken=FAIL;
else hgarfvknmm_result="-",hgarfvknmm_taken=1;
}
text = text.slice(hgarfvknmm_taken===FAIL?0:hgarfvknmm_taken);
if (hgarfvknmm_taken===FAIL) {xsedkygben_result="Unable to match sequence - " + hgarfvknmm_result,xsedkygben_taken=FAIL;break xsedkygben_break;}
xsedkygben_taken+=hgarfvknmm_taken;
const httmbvudie_outerText = text;let httmbvudie_result,httmbvudie_taken;
httmbvudie_break: {
let text = httmbvudie_outerText;
let num = 0;
let index;
for (index = 0; index < text.length; index++) {
  const char = text.charCodeAt(index);
  if (char < 48 || char > 57) break;
  num = num * 10 + char - 48;
}
if (!index) httmbvudie_result="Unable to match number",httmbvudie_taken=FAIL;
else httmbvudie_result=num,httmbvudie_taken=index;
}
text = text.slice(httmbvudie_taken===FAIL?0:httmbvudie_taken);
if (httmbvudie_taken===FAIL) {xsedkygben_result="Unable to match sequence - " + httmbvudie_result,xsedkygben_taken=FAIL;break xsedkygben_break;}
xsedkygben_taken+=httmbvudie_taken;
const jbpecgarya_outerText = text;let jbpecgarya_result,jbpecgarya_taken;
jbpecgarya_break: {
let text = jbpecgarya_outerText;
if (!text.startsWith("")) jbpecgarya_result="Unable to match text ("")",jbpecgarya_taken=FAIL;
else jbpecgarya_result="",jbpecgarya_taken=0;
}
text = text.slice(jbpecgarya_taken===FAIL?0:jbpecgarya_taken);
if (jbpecgarya_taken===FAIL) {xsedkygben_result="Unable to match sequence - " + jbpecgarya_result,xsedkygben_taken=FAIL;break xsedkygben_break;}
xsedkygben_taken+=jbpecgarya_taken;
const nvfajsphvb_outerText = text;let nvfajsphvb_result,nvfajsphvb_taken;
nvfajsphvb_break: {
let text = nvfajsphvb_outerText;
if (!text.startsWith("")) nvfajsphvb_result="Unable to match text ("")",nvfajsphvb_taken=FAIL;
else nvfajsphvb_result="",nvfajsphvb_taken=0;
}
text = text.slice(nvfajsphvb_taken===FAIL?0:nvfajsphvb_taken);
if (nvfajsphvb_taken===FAIL) {xsedkygben_result="Unable to match sequence - " + nvfajsphvb_result,xsedkygben_taken=FAIL;break xsedkygben_break;}
xsedkygben_taken+=nvfajsphvb_taken;
xsedkygben_result=[tswxhlporb_result,pppxchwmwp_result,hgarfvknmm_result,httmbvudie_result,jbpecgarya_result,nvfajsphvb_result];
}
text = text.slice(xsedkygben_taken===FAIL?0:xsedkygben_taken);
if (xsedkygben_taken===FAIL) {aaibhnqxyv_result="Unable to match seq - " + xsedkygben_result,aaibhnqxyv_taken=FAIL;break aaibhnqxyv_break;}
aaibhnqxyv_result=[
xsedkygben_result[1],
xsedkygben_result[3],
];
aaibhnqxyv_taken=xsedkygben_taken;
}
text = text.slice(aaibhnqxyv_taken===FAIL?0:aaibhnqxyv_taken);
if (aaibhnqxyv_taken===FAIL) {rjwaaniiuh_result="Unable to match list - " + aaibhnqxyv_result,rjwaaniiuh_taken=FAIL;break rjwaaniiuh_break;}
rjwaaniiuh_result.push(aaibhnqxyv_result);rjwaaniiuh_taken+=aaibhnqxyv_taken;
while (true) {
const ipbabmnhlr_outerText = text;let ipbabmnhlr_result,ipbabmnhlr_taken;
ipbabmnhlr_break: {
let text = ipbabmnhlr_outerText;
if (!text.startsWith(" or ")) ipbabmnhlr_result="Unable to match text (" or ")",ipbabmnhlr_taken=FAIL;
else ipbabmnhlr_result=" or ",ipbabmnhlr_taken=4;
}
text = text.slice(ipbabmnhlr_taken===FAIL?0:ipbabmnhlr_taken);
if (ipbabmnhlr_taken===FAIL) break;
rjwaaniiuh_taken+=ipbabmnhlr_taken;
const loqnzqebuw_outerText = text;let loqnzqebuw_result,loqnzqebuw_taken;
loqnzqebuw_break: {
let text = loqnzqebuw_outerText;
const viysuxinmv_outerText = text;let viysuxinmv_result,viysuxinmv_taken;
viysuxinmv_break: {
let text = viysuxinmv_outerText;
viysuxinmv_taken=0;
const hilewazyxr_outerText = text;let hilewazyxr_result,hilewazyxr_taken;
hilewazyxr_break: {
let text = hilewazyxr_outerText;
if (!text.startsWith("")) hilewazyxr_result="Unable to match text ("")",hilewazyxr_taken=FAIL;
else hilewazyxr_result="",hilewazyxr_taken=0;
}
text = text.slice(hilewazyxr_taken===FAIL?0:hilewazyxr_taken);
if (hilewazyxr_taken===FAIL) {viysuxinmv_result="Unable to match sequence - " + hilewazyxr_result,viysuxinmv_taken=FAIL;break viysuxinmv_break;}
viysuxinmv_taken+=hilewazyxr_taken;
const njvmwskegg_outerText = text;let njvmwskegg_result,njvmwskegg_taken;
njvmwskegg_break: {
let text = njvmwskegg_outerText;
let num = 0;
let index;
for (index = 0; index < text.length; index++) {
  const char = text.charCodeAt(index);
  if (char < 48 || char > 57) break;
  num = num * 10 + char - 48;
}
if (!index) njvmwskegg_result="Unable to match number",njvmwskegg_taken=FAIL;
else njvmwskegg_result=num,njvmwskegg_taken=index;
}
text = text.slice(njvmwskegg_taken===FAIL?0:njvmwskegg_taken);
if (njvmwskegg_taken===FAIL) {viysuxinmv_result="Unable to match sequence - " + njvmwskegg_result,viysuxinmv_taken=FAIL;break viysuxinmv_break;}
viysuxinmv_taken+=njvmwskegg_taken;
const wsvbgvivvf_outerText = text;let wsvbgvivvf_result,wsvbgvivvf_taken;
wsvbgvivvf_break: {
let text = wsvbgvivvf_outerText;
if (!text.startsWith("-")) wsvbgvivvf_result="Unable to match text ("-")",wsvbgvivvf_taken=FAIL;
else wsvbgvivvf_result="-",wsvbgvivvf_taken=1;
}
text = text.slice(wsvbgvivvf_taken===FAIL?0:wsvbgvivvf_taken);
if (wsvbgvivvf_taken===FAIL) {viysuxinmv_result="Unable to match sequence - " + wsvbgvivvf_result,viysuxinmv_taken=FAIL;break viysuxinmv_break;}
viysuxinmv_taken+=wsvbgvivvf_taken;
const chhgxaszsr_outerText = text;let chhgxaszsr_result,chhgxaszsr_taken;
chhgxaszsr_break: {
let text = chhgxaszsr_outerText;
let num = 0;
let index;
for (index = 0; index < text.length; index++) {
  const char = text.charCodeAt(index);
  if (char < 48 || char > 57) break;
  num = num * 10 + char - 48;
}
if (!index) chhgxaszsr_result="Unable to match number",chhgxaszsr_taken=FAIL;
else chhgxaszsr_result=num,chhgxaszsr_taken=index;
}
text = text.slice(chhgxaszsr_taken===FAIL?0:chhgxaszsr_taken);
if (chhgxaszsr_taken===FAIL) {viysuxinmv_result="Unable to match sequence - " + chhgxaszsr_result,viysuxinmv_taken=FAIL;break viysuxinmv_break;}
viysuxinmv_taken+=chhgxaszsr_taken;
const oipzkiyyxz_outerText = text;let oipzkiyyxz_result,oipzkiyyxz_taken;
oipzkiyyxz_break: {
let text = oipzkiyyxz_outerText;
if (!text.startsWith("")) oipzkiyyxz_result="Unable to match text ("")",oipzkiyyxz_taken=FAIL;
else oipzkiyyxz_result="",oipzkiyyxz_taken=0;
}
text = text.slice(oipzkiyyxz_taken===FAIL?0:oipzkiyyxz_taken);
if (oipzkiyyxz_taken===FAIL) {viysuxinmv_result="Unable to match sequence - " + oipzkiyyxz_result,viysuxinmv_taken=FAIL;break viysuxinmv_break;}
viysuxinmv_taken+=oipzkiyyxz_taken;
const gzmbxrussj_outerText = text;let gzmbxrussj_result,gzmbxrussj_taken;
gzmbxrussj_break: {
let text = gzmbxrussj_outerText;
if (!text.startsWith("")) gzmbxrussj_result="Unable to match text ("")",gzmbxrussj_taken=FAIL;
else gzmbxrussj_result="",gzmbxrussj_taken=0;
}
text = text.slice(gzmbxrussj_taken===FAIL?0:gzmbxrussj_taken);
if (gzmbxrussj_taken===FAIL) {viysuxinmv_result="Unable to match sequence - " + gzmbxrussj_result,viysuxinmv_taken=FAIL;break viysuxinmv_break;}
viysuxinmv_taken+=gzmbxrussj_taken;
viysuxinmv_result=[hilewazyxr_result,njvmwskegg_result,wsvbgvivvf_result,chhgxaszsr_result,oipzkiyyxz_result,gzmbxrussj_result];
}
text = text.slice(viysuxinmv_taken===FAIL?0:viysuxinmv_taken);
if (viysuxinmv_taken===FAIL) {loqnzqebuw_result="Unable to match seq - " + viysuxinmv_result,loqnzqebuw_taken=FAIL;break loqnzqebuw_break;}
loqnzqebuw_result=[
viysuxinmv_result[1],
viysuxinmv_result[3],
];
loqnzqebuw_taken=viysuxinmv_taken;
}
text = text.slice(loqnzqebuw_taken===FAIL?0:loqnzqebuw_taken);
if (loqnzqebuw_taken===FAIL) {rjwaaniiuh_result="Unable to match list - " + loqnzqebuw_result,rjwaaniiuh_taken=FAIL;break rjwaaniiuh_break;}
rjwaaniiuh_result.push(loqnzqebuw_result);rjwaaniiuh_taken+=loqnzqebuw_taken;
}
}
text = text.slice(rjwaaniiuh_taken===FAIL?0:rjwaaniiuh_taken);
if (rjwaaniiuh_taken===FAIL) {ggbnxjckjy_result="Unable to match sequence - " + rjwaaniiuh_result,ggbnxjckjy_taken=FAIL;break ggbnxjckjy_break;}
ggbnxjckjy_taken+=rjwaaniiuh_taken;
const vbcpicgruj_outerText = text;let vbcpicgruj_result,vbcpicgruj_taken;
vbcpicgruj_break: {
let text = vbcpicgruj_outerText;
if (!text.startsWith("")) vbcpicgruj_result="Unable to match text ("")",vbcpicgruj_taken=FAIL;
else vbcpicgruj_result="",vbcpicgruj_taken=0;
}
text = text.slice(vbcpicgruj_taken===FAIL?0:vbcpicgruj_taken);
if (vbcpicgruj_taken===FAIL) {ggbnxjckjy_result="Unable to match sequence - " + vbcpicgruj_result,ggbnxjckjy_taken=FAIL;break ggbnxjckjy_break;}
ggbnxjckjy_taken+=vbcpicgruj_taken;
const gnlxcbtpby_outerText = text;let gnlxcbtpby_result,gnlxcbtpby_taken;
gnlxcbtpby_break: {
let text = gnlxcbtpby_outerText;
if (!text.startsWith("")) gnlxcbtpby_result="Unable to match text ("")",gnlxcbtpby_taken=FAIL;
else gnlxcbtpby_result="",gnlxcbtpby_taken=0;
}
text = text.slice(gnlxcbtpby_taken===FAIL?0:gnlxcbtpby_taken);
if (gnlxcbtpby_taken===FAIL) {ggbnxjckjy_result="Unable to match sequence - " + gnlxcbtpby_result,ggbnxjckjy_taken=FAIL;break ggbnxjckjy_break;}
ggbnxjckjy_taken+=gnlxcbtpby_taken;
ggbnxjckjy_result=[wappvagibe_result,nmeleagddy_result,cmoauwuxvz_result,rjwaaniiuh_result,vbcpicgruj_result,gnlxcbtpby_result];
}
text = text.slice(ggbnxjckjy_taken===FAIL?0:ggbnxjckjy_taken);
if (ggbnxjckjy_taken===FAIL) {egwgbvfwhd_result="Unable to match seq - " + ggbnxjckjy_result,egwgbvfwhd_taken=FAIL;break egwgbvfwhd_break;}
egwgbvfwhd_result={
"name": ggbnxjckjy_result[1],
"ranges": ggbnxjckjy_result[3],
};
egwgbvfwhd_taken=ggbnxjckjy_taken;
}
text = text.slice(egwgbvfwhd_taken===FAIL?0:egwgbvfwhd_taken);
if (egwgbvfwhd_taken===FAIL) {fagopectir_result="Unable to match list - " + egwgbvfwhd_result,fagopectir_taken=FAIL;break fagopectir_break;}
fagopectir_result.push(egwgbvfwhd_result);fagopectir_taken+=egwgbvfwhd_taken;
}
}
text = text.slice(fagopectir_taken===FAIL?0:fagopectir_taken);
if (fagopectir_taken===FAIL) {jdanzuplbu_result="Unable to match sequence - " + fagopectir_result,jdanzuplbu_taken=FAIL;break jdanzuplbu_break;}
jdanzuplbu_taken+=fagopectir_taken;
const lajfabllmg_outerText = text;let lajfabllmg_result,lajfabllmg_taken;
lajfabllmg_break: {
let text = lajfabllmg_outerText;
if (!text.startsWith("\n\nyour ticket:\n")) lajfabllmg_result="Unable to match text ("\n\nyour ticket:\n")",lajfabllmg_taken=FAIL;
else lajfabllmg_result="\n\nyour ticket:\n",lajfabllmg_taken=15;
}
text = text.slice(lajfabllmg_taken===FAIL?0:lajfabllmg_taken);
if (lajfabllmg_taken===FAIL) {jdanzuplbu_result="Unable to match sequence - " + lajfabllmg_result,jdanzuplbu_taken=FAIL;break jdanzuplbu_break;}
jdanzuplbu_taken+=lajfabllmg_taken;
const axofephvoc_outerText = text;let axofephvoc_result,axofephvoc_taken;
axofephvoc_break: {
let text = axofephvoc_outerText;
axofephvoc_result=[];axofephvoc_taken=0;
const fyslkdnkjn_outerText = text;let fyslkdnkjn_result,fyslkdnkjn_taken;
fyslkdnkjn_break: {
let text = fyslkdnkjn_outerText;
let num = 0;
let index;
for (index = 0; index < text.length; index++) {
  const char = text.charCodeAt(index);
  if (char < 48 || char > 57) break;
  num = num * 10 + char - 48;
}
if (!index) fyslkdnkjn_result="Unable to match number",fyslkdnkjn_taken=FAIL;
else fyslkdnkjn_result=num,fyslkdnkjn_taken=index;
}
text = text.slice(fyslkdnkjn_taken===FAIL?0:fyslkdnkjn_taken);
if (fyslkdnkjn_taken===FAIL) {axofephvoc_result="Unable to match list - " + fyslkdnkjn_result,axofephvoc_taken=FAIL;break axofephvoc_break;}
axofephvoc_result.push(fyslkdnkjn_result);axofephvoc_taken+=fyslkdnkjn_taken;
while (true) {
const dbqzorakll_outerText = text;let dbqzorakll_result,dbqzorakll_taken;
dbqzorakll_break: {
let text = dbqzorakll_outerText;
if (!text.startsWith(",")) dbqzorakll_result="Unable to match text (",")",dbqzorakll_taken=FAIL;
else dbqzorakll_result=",",dbqzorakll_taken=1;
}
text = text.slice(dbqzorakll_taken===FAIL?0:dbqzorakll_taken);
if (dbqzorakll_taken===FAIL) break;
axofephvoc_taken+=dbqzorakll_taken;
const mxzvnzhsrn_outerText = text;let mxzvnzhsrn_result,mxzvnzhsrn_taken;
mxzvnzhsrn_break: {
let text = mxzvnzhsrn_outerText;
let num = 0;
let index;
for (index = 0; index < text.length; index++) {
  const char = text.charCodeAt(index);
  if (char < 48 || char > 57) break;
  num = num * 10 + char - 48;
}
if (!index) mxzvnzhsrn_result="Unable to match number",mxzvnzhsrn_taken=FAIL;
else mxzvnzhsrn_result=num,mxzvnzhsrn_taken=index;
}
text = text.slice(mxzvnzhsrn_taken===FAIL?0:mxzvnzhsrn_taken);
if (mxzvnzhsrn_taken===FAIL) {axofephvoc_result="Unable to match list - " + mxzvnzhsrn_result,axofephvoc_taken=FAIL;break axofephvoc_break;}
axofephvoc_result.push(mxzvnzhsrn_result);axofephvoc_taken+=mxzvnzhsrn_taken;
}
}
text = text.slice(axofephvoc_taken===FAIL?0:axofephvoc_taken);
if (axofephvoc_taken===FAIL) {jdanzuplbu_result="Unable to match sequence - " + axofephvoc_result,jdanzuplbu_taken=FAIL;break jdanzuplbu_break;}
jdanzuplbu_taken+=axofephvoc_taken;
const gymikhwbtg_outerText = text;let gymikhwbtg_result,gymikhwbtg_taken;
gymikhwbtg_break: {
let text = gymikhwbtg_outerText;
if (!text.startsWith("\n\nnearby tickets:\n")) gymikhwbtg_result="Unable to match text ("\n\nnearby tickets:\n")",gymikhwbtg_taken=FAIL;
else gymikhwbtg_result="\n\nnearby tickets:\n",gymikhwbtg_taken=18;
}
text = text.slice(gymikhwbtg_taken===FAIL?0:gymikhwbtg_taken);
if (gymikhwbtg_taken===FAIL) {jdanzuplbu_result="Unable to match sequence - " + gymikhwbtg_result,jdanzuplbu_taken=FAIL;break jdanzuplbu_break;}
jdanzuplbu_taken+=gymikhwbtg_taken;
const pswitngibl_outerText = text;let pswitngibl_result,pswitngibl_taken;
pswitngibl_break: {
let text = pswitngibl_outerText;
pswitngibl_result=[];pswitngibl_taken=0;
const glurixwjaa_outerText = text;let glurixwjaa_result,glurixwjaa_taken;
glurixwjaa_break: {
let text = glurixwjaa_outerText;
glurixwjaa_result=[];glurixwjaa_taken=0;
const jxyrbjfkoo_outerText = text;let jxyrbjfkoo_result,jxyrbjfkoo_taken;
jxyrbjfkoo_break: {
let text = jxyrbjfkoo_outerText;
let num = 0;
let index;
for (index = 0; index < text.length; index++) {
  const char = text.charCodeAt(index);
  if (char < 48 || char > 57) break;
  num = num * 10 + char - 48;
}
if (!index) jxyrbjfkoo_result="Unable to match number",jxyrbjfkoo_taken=FAIL;
else jxyrbjfkoo_result=num,jxyrbjfkoo_taken=index;
}
text = text.slice(jxyrbjfkoo_taken===FAIL?0:jxyrbjfkoo_taken);
if (jxyrbjfkoo_taken===FAIL) {glurixwjaa_result="Unable to match list - " + jxyrbjfkoo_result,glurixwjaa_taken=FAIL;break glurixwjaa_break;}
glurixwjaa_result.push(jxyrbjfkoo_result);glurixwjaa_taken+=jxyrbjfkoo_taken;
while (true) {
const bviucxmtun_outerText = text;let bviucxmtun_result,bviucxmtun_taken;
bviucxmtun_break: {
let text = bviucxmtun_outerText;
if (!text.startsWith(",")) bviucxmtun_result="Unable to match text (",")",bviucxmtun_taken=FAIL;
else bviucxmtun_result=",",bviucxmtun_taken=1;
}
text = text.slice(bviucxmtun_taken===FAIL?0:bviucxmtun_taken);
if (bviucxmtun_taken===FAIL) break;
glurixwjaa_taken+=bviucxmtun_taken;
const fsfzljzbzo_outerText = text;let fsfzljzbzo_result,fsfzljzbzo_taken;
fsfzljzbzo_break: {
let text = fsfzljzbzo_outerText;
let num = 0;
let index;
for (index = 0; index < text.length; index++) {
  const char = text.charCodeAt(index);
  if (char < 48 || char > 57) break;
  num = num * 10 + char - 48;
}
if (!index) fsfzljzbzo_result="Unable to match number",fsfzljzbzo_taken=FAIL;
else fsfzljzbzo_result=num,fsfzljzbzo_taken=index;
}
text = text.slice(fsfzljzbzo_taken===FAIL?0:fsfzljzbzo_taken);
if (fsfzljzbzo_taken===FAIL) {glurixwjaa_result="Unable to match list - " + fsfzljzbzo_result,glurixwjaa_taken=FAIL;break glurixwjaa_break;}
glurixwjaa_result.push(fsfzljzbzo_result);glurixwjaa_taken+=fsfzljzbzo_taken;
}
}
text = text.slice(glurixwjaa_taken===FAIL?0:glurixwjaa_taken);
if (glurixwjaa_taken===FAIL) {pswitngibl_result="Unable to match list - " + glurixwjaa_result,pswitngibl_taken=FAIL;break pswitngibl_break;}
pswitngibl_result.push(glurixwjaa_result);pswitngibl_taken+=glurixwjaa_taken;
while (true) {
const phwxdtlyrk_outerText = text;let phwxdtlyrk_result,phwxdtlyrk_taken;
phwxdtlyrk_break: {
let text = phwxdtlyrk_outerText;
if (!text.startsWith("\n")) phwxdtlyrk_result="Unable to match text ("\n")",phwxdtlyrk_taken=FAIL;
else phwxdtlyrk_result="\n",phwxdtlyrk_taken=1;
}
text = text.slice(phwxdtlyrk_taken===FAIL?0:phwxdtlyrk_taken);
if (phwxdtlyrk_taken===FAIL) break;
pswitngibl_taken+=phwxdtlyrk_taken;
const pxtdjwhwap_outerText = text;let pxtdjwhwap_result,pxtdjwhwap_taken;
pxtdjwhwap_break: {
let text = pxtdjwhwap_outerText;
pxtdjwhwap_result=[];pxtdjwhwap_taken=0;
const jouvdpojze_outerText = text;let jouvdpojze_result,jouvdpojze_taken;
jouvdpojze_break: {
let text = jouvdpojze_outerText;
let num = 0;
let index;
for (index = 0; index < text.length; index++) {
  const char = text.charCodeAt(index);
  if (char < 48 || char > 57) break;
  num = num * 10 + char - 48;
}
if (!index) jouvdpojze_result="Unable to match number",jouvdpojze_taken=FAIL;
else jouvdpojze_result=num,jouvdpojze_taken=index;
}
text = text.slice(jouvdpojze_taken===FAIL?0:jouvdpojze_taken);
if (jouvdpojze_taken===FAIL) {pxtdjwhwap_result="Unable to match list - " + jouvdpojze_result,pxtdjwhwap_taken=FAIL;break pxtdjwhwap_break;}
pxtdjwhwap_result.push(jouvdpojze_result);pxtdjwhwap_taken+=jouvdpojze_taken;
while (true) {
const hgevemuedm_outerText = text;let hgevemuedm_result,hgevemuedm_taken;
hgevemuedm_break: {
let text = hgevemuedm_outerText;
if (!text.startsWith(",")) hgevemuedm_result="Unable to match text (",")",hgevemuedm_taken=FAIL;
else hgevemuedm_result=",",hgevemuedm_taken=1;
}
text = text.slice(hgevemuedm_taken===FAIL?0:hgevemuedm_taken);
if (hgevemuedm_taken===FAIL) break;
pxtdjwhwap_taken+=hgevemuedm_taken;
const aucsmfkhca_outerText = text;let aucsmfkhca_result,aucsmfkhca_taken;
aucsmfkhca_break: {
let text = aucsmfkhca_outerText;
let num = 0;
let index;
for (index = 0; index < text.length; index++) {
  const char = text.charCodeAt(index);
  if (char < 48 || char > 57) break;
  num = num * 10 + char - 48;
}
if (!index) aucsmfkhca_result="Unable to match number",aucsmfkhca_taken=FAIL;
else aucsmfkhca_result=num,aucsmfkhca_taken=index;
}
text = text.slice(aucsmfkhca_taken===FAIL?0:aucsmfkhca_taken);
if (aucsmfkhca_taken===FAIL) {pxtdjwhwap_result="Unable to match list - " + aucsmfkhca_result,pxtdjwhwap_taken=FAIL;break pxtdjwhwap_break;}
pxtdjwhwap_result.push(aucsmfkhca_result);pxtdjwhwap_taken+=aucsmfkhca_taken;
}
}
text = text.slice(pxtdjwhwap_taken===FAIL?0:pxtdjwhwap_taken);
if (pxtdjwhwap_taken===FAIL) {pswitngibl_result="Unable to match list - " + pxtdjwhwap_result,pswitngibl_taken=FAIL;break pswitngibl_break;}
pswitngibl_result.push(pxtdjwhwap_result);pswitngibl_taken+=pxtdjwhwap_taken;
}
}
text = text.slice(pswitngibl_taken===FAIL?0:pswitngibl_taken);
if (pswitngibl_taken===FAIL) {jdanzuplbu_result="Unable to match sequence - " + pswitngibl_result,jdanzuplbu_taken=FAIL;break jdanzuplbu_break;}
jdanzuplbu_taken+=pswitngibl_taken;
const qlzxdqdzfx_outerText = text;let qlzxdqdzfx_result,qlzxdqdzfx_taken;
qlzxdqdzfx_break: {
let text = qlzxdqdzfx_outerText;
if (!text.startsWith("")) qlzxdqdzfx_result="Unable to match text ("")",qlzxdqdzfx_taken=FAIL;
else qlzxdqdzfx_result="",qlzxdqdzfx_taken=0;
}
text = text.slice(qlzxdqdzfx_taken===FAIL?0:qlzxdqdzfx_taken);
if (qlzxdqdzfx_taken===FAIL) {jdanzuplbu_result="Unable to match sequence - " + qlzxdqdzfx_result,jdanzuplbu_taken=FAIL;break jdanzuplbu_break;}
jdanzuplbu_taken+=qlzxdqdzfx_taken;
const kqfiluywbe_outerText = text;let kqfiluywbe_result,kqfiluywbe_taken;
kqfiluywbe_break: {
let text = kqfiluywbe_outerText;
if (!text.startsWith("")) kqfiluywbe_result="Unable to match text ("")",kqfiluywbe_taken=FAIL;
else kqfiluywbe_result="",kqfiluywbe_taken=0;
}
text = text.slice(kqfiluywbe_taken===FAIL?0:kqfiluywbe_taken);
if (kqfiluywbe_taken===FAIL) {jdanzuplbu_result="Unable to match sequence - " + kqfiluywbe_result,jdanzuplbu_taken=FAIL;break jdanzuplbu_break;}
jdanzuplbu_taken+=kqfiluywbe_taken;
jdanzuplbu_result=[erdzebyqip_result,fagopectir_result,lajfabllmg_result,axofephvoc_result,gymikhwbtg_result,pswitngibl_result,qlzxdqdzfx_result,kqfiluywbe_result];
}
text = text.slice(jdanzuplbu_taken===FAIL?0:jdanzuplbu_taken);
if (jdanzuplbu_taken===FAIL) {umpfzyhwhj_result="Unable to match seq - " + jdanzuplbu_result,umpfzyhwhj_taken=FAIL;break umpfzyhwhj_break;}
umpfzyhwhj_result={
"fields": jdanzuplbu_result[1],
"mine": jdanzuplbu_result[3],
"nearby": jdanzuplbu_result[5],
};
umpfzyhwhj_taken=jdanzuplbu_taken;
}
text = text.slice(umpfzyhwhj_taken===FAIL?0:umpfzyhwhj_taken);
if (umpfzyhwhj_taken===FAIL) throw new Error(umpfzyhwhj_result);
if (text.length !== 0) console.warn(`Unable to match entire string, ${text.length} left.`);
return umpfzyhwhj_result;